{"version":3,"file":"static/js/587.926ef0e5.chunk.js","mappings":"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","sources":["components/ui/FancyButton.js","webpack://musicgame/./src/components/ui/StatModule.module.css?3d68","components/ui/StatModule.js","firebase/fetch.js","firebase/write.js","../node_modules/@mui/icons-material/esm/Favorite.js","firebase/fetchRandomSong.js","webpack://musicgame/./src/pages/Game.module.css?f9c1","webpack://musicgame/./src/components/ui/NameModule.module.css?8664","components/ui/NameModule.js","pages/Game.js"],"sourcesContent":["import { createTheme, ThemeProvider, Button } from \"@mui/material\";\r\n\r\nexport default function FancyButton({ children, onClick }) {\r\n  const bgRGBA = localStorage.colorTheme === \"dark\" ? \"255\" : \"0\";\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: localStorage.colorTheme,\r\n      primary: {\r\n        light: \"#757ce8\",\r\n        main: \"#3f50b5\",\r\n        dark: \"#002884\"\r\n      }\r\n    },\r\n    typography: {\r\n      fontFamily: `\"Inter\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif`\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        styleOverrides: {\r\n          root: {\r\n            fontWeight: 600,\r\n            marginBottom: \"0.5rem\",\r\n            justifyContent: \"left\",\r\n            padding: \"0.5rem 1.5rem\",\r\n            textTransform: \"none\",\r\n            backgroundColor: `rgba(${bgRGBA}, ${bgRGBA}, ${bgRGBA}, 0.05)`,\r\n            color: getComputedStyle(document.body).getPropertyValue(\"--text\"),\r\n            marginRight: \"0.5rem\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Button onClick={onClick}>{children}</Button>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"statModuleOuter\":\"StatModule_statModuleOuter__Xu691\",\"statModuleOuterDisplay\":\"StatModule_statModuleOuterDisplay__3jPHx\",\"title\":\"StatModule_title__KWTPn\",\"value\":\"StatModule_value__rT9A2\"};","import classes from './StatModule.module.css';\n\nexport default function StatModule({ Title, Value, Display }) {\n\treturn (\n\t\t<div className={Display ? classes.statModuleOuterDisplay : classes.statModuleOuter}>\n\t\t<span className={classes.value}>{Value}</span>\n\t\t\t<span className={classes.title}>{Title}</span>\n\t\t</div>\n\t)\n}","import { getDatabase, ref, onValue } from \"firebase/database\";\n\nconst fetch = path => {\n\treturn new Promise(resolve => {\n\t\tconst db = getDatabase();\n\t\tonValue(ref(db, path), snapshot => resolve(snapshot.val()));\n\t});\n}\n\nexport default fetch;","import { getDatabase, ref, set } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\n\nconst write = (path, data) => {\n\treturn new Promise(resolve => {\n\t\tconst db = getDatabase();\n\t\tset(ref(db, path), data).then(() => resolve('completed'));\n\t});\n}\n\nexport default write;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');","import { getDatabase, ref, child, get } from \"firebase/database\";\n\nexport default function fetchRandomSong() {\n\treturn new Promise(resolve => {\n\t\tconst dbRef = ref(getDatabase());\n\t\tget(child(dbRef, `songs/numSongs`)).then(snapshot => {\n\t\t\tconst numSongs = snapshot.val();\n\t\t\tlet randomSongNum = Math.floor(Math.random() * numSongs - 1);\n\t\t\tif (randomSongNum === -1) randomSongNum = 0;\n\t\t\tget(child(dbRef, `songs/songList/${randomSongNum}`)).then(randomSong => {\n\t\t\t\trandomSong = randomSong.val();\n\t\t\t\tresolve([randomSong, randomSongNum]);\n\t\t\t})\n\t\t});\n\t});\n}","// extracted by mini-css-extract-plugin\nexport default {\"gameContainer\":\"Game_gameContainer__e6ith\",\"coverInput\":\"Game_coverInput__dHni-\",\"gameOuter\":\"Game_gameOuter__HepEQ\",\"gameBottom\":\"Game_gameBottom__Hhl9D\",\"heart\":\"Game_heart__YAZba\",\"faded\":\"Game_faded__E2R2I\",\"heartAnimation\":\"Game_heartAnimation__T8HLW\"};","// extracted by mini-css-extract-plugin\nexport default {\"nameModuleOuter\":\"NameModule_nameModuleOuter__llC9F\",\"songName\":\"NameModule_songName__znUiE\",\"songArtist\":\"NameModule_songArtist__F9a2x\",\"wordMiddle\":\"NameModule_wordMiddle__lxr2f\",\"pulse\":\"NameModule_pulse__Yvk08\",\"incompletedWord\":\"NameModule_incompletedWord__RYX-r\"};","import classes from './NameModule.module.css';\n\nexport default function NameModule({ Name, FullName, Artist, onComplete }) {\n\tconst currentIdx = Name.length;\n\n\tconst words = FullName.split(' ');\n\tlet wordsSplit = [];\n\twords.forEach(word => wordsSplit.push(word.split('')));\n\t\n\tlet totalIdx = 0;\n\tlet formedWord = '';\n\twordsSplit.forEach((wordSplit) => {\n\t\twordSplit.forEach((letter, idxWordSplit) => {\n\t\t\tif (idxWordSplit !== 0) {\n\t\t\t\tif (totalIdx < currentIdx) {\n\t\t\t\t\tformedWord += Name.split('')[totalIdx];\n\t\t\t\t} else if (totalIdx === currentIdx) {\n\t\t\t\t\tformedWord += '|';\n\t\t\t\t} else {\n\t\t\t\t\tformedWord += '_';\n\t\t\t\t}\n\t\t\t\ttotalIdx += 1;\n\t\t\t} else {\n\t\t\t\tformedWord += letter;\n\t\t\t}\n\t\t});\n\t\tformedWord += ' ';\n\t});\n\tformedWord.slice(0, -1);\n\n\tconst wordIncomplete = formedWord.includes('|');\n\tif (!wordIncomplete) onComplete(formedWord);\n\n\treturn (\n\t\t<div className={classes.nameModuleOuter}>\n\t\t\t{ wordIncomplete ?\n\t\t\t\t<span className={classes.songName}>\n\t\t\t\t\t<span>{formedWord.split('|')[0]}</span>\n\t\t\t\t\t<span className={classes.wordMiddle}></span>\n\t\t\t\t\t{ formedWord.split('|')[1].split('').map((letter, idx) => {\n\t\t\t\t\t\treturn <span className={letter === '_' ? classes.incompletedWord : undefined} key={`letter${letter}${idx}`}>{letter}</span>\n\t\t\t\t\t}) }\n\t\t\t\t</span>\n\t\t\t:\n\t\t\t\t<span className={classes.songName}>{formedWord}</span>\n\t\t\t}\n\t\t\t<span className={classes.songArtist}>{Artist}</span>\n\t\t</div>\n\t)\n}","import { useEffect, useState } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Favorite } from \"@mui/icons-material\";\r\n\r\nimport FancyButton from \"../components/ui/FancyButton\";\r\nimport fetchRandomSong from \"../firebase/fetchRandomSong\";\r\nimport classes from \"./Game.module.css\";\r\nimport NameModule from \"../components/ui/NameModule\";\r\nimport StatModule from \"../components/ui/StatModule\";\r\nimport fetch from \"../firebase/fetch\";\r\nimport write from \"../firebase/write\";\r\n\r\nexport default function Game() {\r\n  const [signedIn, setSignedIn] = useState(\"Loading\");\r\n  const [currentSong, setCurrentSong] = useState(\"Loading\");\r\n  const [hearts, setHearts] = useState(2);\r\n  const [nameInput, setNameInput] = useState('');\r\n  const [currentSongCompleted, setCurrentSongCompleted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [highscore, setHighscore] = useState('Loading');\r\n\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setSignedIn(user);\r\n        fetch(`/user/${user.uid}/highscore`).then(userHighscore => setHighscore(userHighscore));\r\n        fetch(`/user/${user.uid}/currentGame`).then(currentGame => {\r\n          if (currentGame !== null) {\r\n            setScore(currentGame.score);\r\n            fetch(`/songs/songList/${currentGame.songIdx}`).then(song => setCurrentSong(song));\r\n          } else {\r\n            fetchRandomSong().then(randomSongArr => {\r\n              const randomSong = randomSongArr[0];\r\n              const randomSongIdx = randomSongArr[1];\r\n              console.log(signedIn, signedIn.uid);\r\n              write(`/user/${user.uid}/currentGame`, {\r\n                score: 0,\r\n                songIdx: randomSongIdx\r\n              });\r\n            });\r\n          }\r\n        } );\r\n      }\r\n      else setSignedIn(\"signedOut\");\r\n    });\r\n  }, []);\r\n\r\n  const completed = completedSong => {\r\n    setNameInput('');\r\n    if (completedSong.trim() === currentSong.name.trim()) {\r\n      setCurrentSongCompleted(true);\r\n      let newScore;\r\n      if (hearts === 2) newScore = score + 3;\r\n      else newScore = score + 1;\r\n      setScore(newScore);\r\n      setHearts(2);\r\n        fetchRandomSong().then(randomSongArr => {\r\n          const randomSong = randomSongArr[0];\r\n          const randomSongIdx = randomSongArr[1];\r\n          write(`/user/${signedIn.uid}/currentGame`, {\r\n            score: newScore,\r\n            songIdx: randomSongIdx\r\n          }).then(() => {\r\n            setCurrentSong(randomSong);\r\n            setCurrentSongCompleted(false);\r\n          });\r\n        });\r\n    } else {\r\n      setHearts(hearts - 1);\r\n      if (hearts === 1) {\r\n        fetch(`/user/${signedIn.uid}/numGames`).then(numGames => {\r\n          write(`/user/${signedIn.uid}/game/${numGames}`, {\r\n            score: score,\r\n            date: new Date().getTime()\r\n          }).then(() => {\r\n            write(`/user/${signedIn.uid}/numGames`, numGames + 1).then(() => {\r\n              fetch(`/user/${signedIn.uid}/highscore`).then(highscore => {\r\n                write(`/user/${signedIn.uid}/currentGame`, null).then(() => {\r\n                  if (score > highscore || highscore === null) {\r\n                    write(`/user/${signedIn.uid}/highscore`, score).then(() => {\r\n                      write(`/leaderboard/${signedIn.uid}`, {\r\n                        name: signedIn.displayName,\r\n                        highscore: score\r\n                      }).then(() => {\r\n                        navigate('/results');\r\n                      });\r\n                    });\r\n                  } else {\r\n                    navigate('/results');\r\n                  }\r\n                });\r\n              });\r\n            });\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  if (signedIn === \"Loading\") {\r\n    return (\r\n      <div>\r\n        <h3>Loading...</h3>\r\n      </div>\r\n    );\r\n  } else if (signedIn === \"signedOut\") {\r\n    return (\r\n      <div>\r\n        <h3>You must sign in</h3>\r\n        <FancyButton onClick={() => navigate(\"/account\")}>Sign In</FancyButton>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={classes.gameContainer}>\r\n        <input type=\"text\" className={classes.coverInput} value={nameInput} onChange={e => setNameInput(e.target.value)} autoFocus autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" />\r\n        { currentSong === \"Loading\" ?\r\n          <h3>Loading...</h3>\r\n        :\r\n          <div className={classes.gameOuter}>\r\n            <div></div>\r\n            <div>{ !currentSongCompleted && <NameModule Name={nameInput} FullName={currentSong.name} Artist={currentSong.artist} onComplete={completed} /> }</div>\r\n            <div className={classes.gameBottom}>\r\n              <div>\r\n                <Favorite className={classes.heart} />\r\n                <Favorite className={hearts === 1 ? [classes.heart, classes.faded].join(' ') : classes.heart} />\r\n              </div>\r\n              <div>\r\n                <StatModule Title=\"Highscore\" Value={highscore} />\r\n                <StatModule Title=\"Points\" Value={score} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"names":["FancyButton","children","onClick","bgRGBA","localStorage","colorTheme","theme","createTheme","palette","mode","primary","light","main","dark","typography","fontFamily","components","MuiButton","styleOverrides","root","fontWeight","marginBottom","justifyContent","padding","textTransform","backgroundColor","color","getComputedStyle","document","body","getPropertyValue","marginRight","StatModule","Title","Value","Display","className","classes","path","Promise","resolve","db","getDatabase","onValue","ref","snapshot","val","data","set","then","createSvgIcon","_jsx","d","fetchRandomSong","dbRef","get","child","numSongs","randomSongNum","Math","floor","random","randomSong","NameModule","Name","FullName","Artist","onComplete","currentIdx","length","words","split","wordsSplit","forEach","word","push","totalIdx","formedWord","wordSplit","letter","idxWordSplit","slice","wordIncomplete","includes","map","idx","undefined","Game","useState","signedIn","setSignedIn","currentSong","setCurrentSong","hearts","setHearts","nameInput","setNameInput","currentSongCompleted","setCurrentSongCompleted","score","setScore","highscore","setHighscore","navigate","useNavigate","useEffect","auth","getAuth","onAuthStateChanged","user","fetch","uid","userHighscore","currentGame","songIdx","song","randomSongArr","randomSongIdx","console","log","write","type","value","onChange","e","target","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","name","artist","completedSong","newScore","trim","numGames","date","Date","getTime","displayName","Favorite","join"],"sourceRoot":""}